{# USES_VARIABLES { Cm, dt, v, N,
                  ab_star, b_plus, ab_plus, b_minus, ab_minus, v_star, u_plus, u_minus} #}
{# ITERATE_ALL { _idx } #}

'''
Solves the cable equation (spatial diffusion of currents).
This is where most time-consuming time computations are done.
'''

from scipy.linalg import solve_banded
from numpy import zeros

# scalar code
_vectorisation_idx = 1
{{scalar_code|autoindent}}

# vector code
_vectorisation_idx = N
{{vector_code|autoindent}}

# Particular solution
b=-({{Cm}}/dt*{{v}})-_I0
ab = zeros((3,N))
ab[:]={{ab_star}}.reshape((3,N))
ab[1,:]-=_gtot
{{v_star}}[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
# Homogeneous solutions
b[:]={{b_plus}}
ab[:]={{ab_plus}}.reshape((3,N))
ab[1,:]-=_gtot
{{u_plus}}[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
b[:]={{b_minus}}
ab[:]={{ab_minus}}.reshape((3,N))
ab[1,:]-=_gtot
{{u_minus}}[:]=solve_banded((1,1),ab,b,overwrite_ab=True,overwrite_b=True)
